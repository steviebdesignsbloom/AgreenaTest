{
  "info": {
    "_postman_id": "f4ddb629-1ff2-4bdc-8227-e5f237758672",
    "name": "Swagger Petstore",
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "4664080",
    "_collection_link": "https://galactic-flare-656532.postman.co/workspace/Elsewhen~87dc64ed-85bb-4311-8a8b-14ca4f95a4d4/collection/4664080-f4ddb629-1ff2-4bdc-8227-e5f237758672?action=share&source=collection_link&creator=4664080"
  },
  "item": [
    {
      "name": "pet",
      "item": [
        {
          "name": "{petId}",
          "item": [
            {
              "name": "uploadImage",
              "item": [
                {
                  "name": "uploads an image",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "key": "value",
                          "value": "{{api_key}}",
                          "type": "string"
                        },
                        {
                          "key": "in",
                          "value": "query",
                          "type": "string"
                        },
                        {
                          "key": "key",
                          "value": "api_key",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "additionalMetadata",
                          "value": "images.jpeg",
                          "description": "Additional data to pass to server",
                          "type": "text"
                        },
                        {
                          "key": "file",
                          "description": "file to upload",
                          "type": "file",
                          "src": "postman-cloud:///1eeca7f7-fe3d-48c0-bdd7-31dc0240df66"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId/uploadImage",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId", "uploadImage"],
                      "variable": [
                        {
                          "key": "petId",
                          "value": "{{petId}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "name": "successful operation",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": "Added as a part of security scheme: oauth2",
                            "key": "Authorization",
                            "value": "<token>"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "description": "Additional data to pass to server",
                              "type": "text"
                            },
                            {
                              "key": "file",
                              "value": "<string>",
                              "description": "file to upload",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/pet/:petId/uploadImage",
                          "host": ["{{baseUrl}}"],
                          "path": ["pet", ":petId", "uploadImage"],
                          "variable": [
                            {
                              "key": "petId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Find pet by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "api_key",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet", ":petId"],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "{{petId}}",
                      "description": "(Required) ID of pet to return"
                    }
                  ]
                },
                "description": "Returns a single pet"
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
                },
                {
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Pet not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Updates a pet in the store with form data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "name",
                      "value": "<string>",
                      "description": "Updated name of the pet"
                    },
                    {
                      "key": "status",
                      "value": "<string>",
                      "description": "Updated status of the pet"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet", ":petId"],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "{{petId}}",
                      "description": "(Required) ID of pet that needs to be updated"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Invalid input",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "Updated name of the pet"
                        },
                        {
                          "key": "status",
                          "value": "<string>",
                          "description": "Updated status of the pet"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Deletes a pet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "read:pets write:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/:petId",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet", ":petId"],
                  "variable": [
                    {
                      "key": "petId",
                      "value": "{{petId}}"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "api_key",
                        "value": "<string>"
                      },
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Pet not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "api_key",
                        "value": "<string>"
                      },
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/:petId",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", ":petId"],
                      "variable": [
                        {
                          "key": "petId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "findByStatus",
          "item": [
            {
              "name": "Finds Pets by status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "read:pets write:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findByStatus?status={{status}}&status={{status}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet", "findByStatus"],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{status}}",
                      "description": "(Required) Status values that need to be considered for filter"
                    },
                    {
                      "key": "status",
                      "value": "{{status}}",
                      "description": "(Required) Status values that need to be considered for filter"
                    }
                  ]
                },
                "description": "Multiple status values can be provided with comma separated strings"
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/findByStatus?status=available",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", "findByStatus"],
                      "query": [
                        {
                          "key": "status",
                          "value": "available",
                          "description": "(Required) Status values that need to be considered for filter"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
                },
                {
                  "name": "Invalid status value",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/findByStatus?status=available",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", "findByStatus"],
                      "query": [
                        {
                          "key": "status",
                          "value": "available",
                          "description": "(Required) Status values that need to be considered for filter"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "findByTags",
          "item": [
            {
              "name": "Finds Pets by tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const index = Math.trunc(Math.random() * jsonData.length);",
                      "const item = jsonData[index];",
                      "",
                      "pm.collectionVariables.set(\"test-itemId\", item.id);",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "oauth2",
                  "oauth2": [
                    {
                      "key": "scope",
                      "value": "read:pets write:pets",
                      "type": "string"
                    },
                    {
                      "key": "authUrl",
                      "value": "https://petstore.swagger.io/oauth/authorize",
                      "type": "string"
                    },
                    {
                      "key": "grant_type",
                      "value": "implicit",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/pet/findByTags?tags={{status}}&tags={{status}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet", "findByTags"],
                  "query": [
                    {
                      "key": "tags",
                      "value": "{{status}}",
                      "description": "(Required) Tags to filter by"
                    },
                    {
                      "key": "tags",
                      "value": "{{status}}",
                      "description": "(Required) Tags to filter by"
                    }
                  ]
                },
                "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", "findByTags"],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>",
                          "description": "(Required) Tags to filter by"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
                },
                {
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: oauth2",
                        "key": "Authorization",
                        "value": "<token>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["pet", "findByTags"],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>",
                          "description": "(Required) Tags to filter by"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Add a new pet to the store",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response body is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jiggly\",\n  \"photoUrls\": [\n    \"http://petschoiceewell.co.uk/wp-content/uploads/2018/04/PETS-CHOICE_window_landing-hero_2018_V3-e1590178279161.png\",\n    \"http://petschoiceewell.co.uk/wp-content/uploads/2018/04/PETS-CHOICE_window_landing-hero_2018_V3-e1590178279161.png\"\n  ],\n  \"id\": \"49558djkfgj3\",\n  \"category\": {\n    \"id\": \"59349wtgkdkg34\",\n    \"name\": \"Jungle\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"439583fskfsf345\",\n      \"name\": \"Jankro\"\n    },\n    {\n      \"id\": \"Jigglydaksa\",\n      \"name\": \"Darren\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/pet",
              "host": ["{{baseUrl}}"],
              "path": ["pet"]
            }
          },
          "response": [
            {
              "name": "Invalid input",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet"]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update an existing pet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response body is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "read:pets write:pets",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "https://petstore.swagger.io/oauth/authorize",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "implicit",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/pet",
              "host": ["{{baseUrl}}"],
              "path": ["pet"]
            }
          },
          "response": [
            {
              "name": "Invalid ID supplied",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Pet not found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Validation exception",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "Added as a part of security scheme: oauth2",
                    "key": "Authorization",
                    "value": "<token>"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/pet",
                  "host": ["{{baseUrl}}"],
                  "path": ["pet"]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "store",
      "item": [
        {
          "name": "order",
          "item": [
            {
              "name": "{orderId}",
              "item": [
                {
                  "name": "Find purchase order by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response body is JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/store/order/:orderId",
                      "host": ["{{baseUrl}}"],
                      "path": ["store", "order", ":orderId"],
                      "variable": [
                        {
                          "key": "orderId",
                          "value": "<long>",
                          "description": "(Required) ID of pet that needs to be fetched"
                        }
                      ]
                    },
                    "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
                  },
                  "response": [
                    {
                      "name": "successful operation",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": ["{{baseUrl}}"],
                          "path": ["store", "order", ":orderId"],
                          "variable": [
                            {
                              "key": "orderId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"delivered\",\n  \"complete\": \"<boolean>\"\n}"
                    },
                    {
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": ["{{baseUrl}}"],
                          "path": ["store", "order", ":orderId"],
                          "variable": [
                            {
                              "key": "orderId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Order not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": ["{{baseUrl}}"],
                          "path": ["store", "order", ":orderId"],
                          "variable": [
                            {
                              "key": "orderId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete purchase order by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Response body is JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/store/order/:orderId",
                      "host": ["{{baseUrl}}"],
                      "path": ["store", "order", ":orderId"],
                      "variable": [
                        {
                          "key": "orderId",
                          "value": "<long>",
                          "description": "(Required) ID of the order that needs to be deleted"
                        }
                      ]
                    },
                    "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
                  },
                  "response": [
                    {
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": ["{{baseUrl}}"],
                          "path": ["store", "order", ":orderId"],
                          "variable": [
                            {
                              "key": "orderId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Order not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/store/order/:orderId",
                          "host": ["{{baseUrl}}"],
                          "path": ["store", "order", ":orderId"],
                          "variable": [
                            {
                              "key": "orderId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "Place an order for a pet",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"delivered\",\n  \"complete\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/store/order",
                  "host": ["{{baseUrl}}"],
                  "path": ["store", "order"]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"delivered\",\n  \"complete\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/store/order",
                      "host": ["{{baseUrl}}"],
                      "path": ["store", "order"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"delivered\",\n  \"complete\": \"<boolean>\"\n}"
                },
                {
                  "name": "Invalid Order",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"delivered\",\n  \"complete\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/store/order",
                      "host": ["{{baseUrl}}"],
                      "path": ["store", "order"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "inventory",
          "item": [
            {
              "name": "Returns pet inventories by status",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "key",
                      "value": "api_key",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{apiKey}}",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/store/inventory",
                  "host": ["{{baseUrl}}"],
                  "path": ["store", "inventory"]
                },
                "description": "Returns a map of status codes to quantities"
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "api_key",
                        "value": "<API Key>"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/store/inventory",
                      "host": ["{{baseUrl}}"],
                      "path": ["store", "inventory"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"cupidatat0\": \"<integer>\",\n  \"ad_2\": \"<integer>\",\n  \"adipisicing4\": \"<integer>\"\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "user",
      "item": [
        {
          "name": "createWithArray",
          "item": [
            {
              "name": "Creates list of users with given input array",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/createWithArray",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", "createWithArray"]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/createWithArray",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", "createWithArray"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "createWithList",
          "item": [
            {
              "name": "Creates list of users with given input array",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/createWithList",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", "createWithList"]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/createWithList",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", "createWithList"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "{username}",
          "item": [
            {
              "name": "Get user by user name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", ":username"],
                  "variable": [
                    {
                      "key": "username",
                      "value": ""
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}"
                },
                {
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Updated user",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", ":username"],
                  "variable": [
                    {
                      "key": "username",
                      "value": "{{username}}",
                      "description": "(Required) name that need to be updated"
                    }
                  ]
                },
                "description": "This can only be done by the logged in user."
              },
              "response": [
                {
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete user",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    },
                    {
                      "key": "value",
                      "value": "{{api_key}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "api_key",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/:username",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", ":username"],
                  "variable": [
                    {
                      "key": "username",
                      "value": "{{username}}"
                    }
                  ]
                },
                "description": "This can only be done by the logged in user."
              },
              "response": [
                {
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/:username",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", ":username"],
                      "variable": [
                        {
                          "key": "username"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "login",
          "item": [
            {
              "name": "Logs user into the system",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/user/login?username={{username}}&password={{password}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", "login"],
                  "query": [
                    {
                      "key": "username",
                      "value": "{{username}}",
                      "description": "(Required) The user name for login"
                    },
                    {
                      "key": "password",
                      "value": "{{password}}",
                      "description": "(Required) The password for login in clear text"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", "login"],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "(Required) The user name for login"
                        },
                        {
                          "key": "password",
                          "value": "<string>",
                          "description": "(Required) The password for login in clear text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-Expires-After",
                      "value": "<dateTime>",
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      }
                    },
                    {
                      "key": "X-Rate-Limit",
                      "value": "<integer>",
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", "login"],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>",
                          "description": "(Required) The user name for login"
                        },
                        {
                          "key": "password",
                          "value": "<string>",
                          "description": "(Required) The password for login in clear text"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "logout",
          "item": [
            {
              "name": "Logs out current logged in user session",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response body is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/user/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["user", "logout"]
                }
              },
              "response": [
                {
                  "name": "successful operation",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/user/logout",
                      "host": ["{{baseUrl}}"],
                      "path": ["user", "logout"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Create user",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('username', pm.variables.replaceIn('{{$randomUserName}}'));",
                  "pm.collectionVariables.set('firstName', pm.variables.replaceIn('{{$randomFirstName}}'));",
                  "pm.collectionVariables.set('lastName', pm.variables.replaceIn('{{$randomLastName}}'));",
                  "pm.collectionVariables.set('email', pm.variables.replaceIn('{{$randomEmail}}'));",
                  "pm.collectionVariables.set('password', pm.variables.replaceIn('{{$randomPassword}}'));",
                  "pm.collectionVariables.set('phone', pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "custDetails = pm.response.json();",
                  "let newName = custDetails.firstName;",
                  "",
                  "pm.globals.set(\"CreatedItemName_global\", newName)",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response body is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "    // custDetails = pm.response.json();",
                  "    console.log(custDetails);",
                  "});",
                  "",
                  "pm.test('Customer Details', function() {",
                  "    pm.expect(custDetails.username).to.eql(pm.variables.get('{{$randomUserName}}'));",
                  "    pm.expect(custDetails.firstName).to.eql(pm.variables.get('{{$randomFirstName}}'));",
                  "    pm.expect(custDetails.lastName).to.eql(pm.variables.get('{{$randomLastName}}'));",
                  "    pm.expect(custDetails.email).to.eql(pm.variables.get('{{$randomEmail}}'));",
                  "    pm.expect(custDetails.password).to.eql(pm.variables.get('{{$randomPassword}}'));",
                  "    pm.expect(custDetails.phone).to.eql(pm.variables.get('{{$randomPhoneNumber}}'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "  {\n    \"id\": 34,\n    \"username\": \"{{$randomUsername}}\",\n    \"firstName\": \"{{$randomFirstname}},\",\n    \"lastName\": \"{{$randomLastname}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"userStatus\": 0\n  }",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/user",
              "host": ["{{baseUrl}}"],
              "path": ["user"]
            },
            "description": "This can only be done by the logged in user."
          },
          "response": [
            {
              "name": "successful operation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/user",
                  "host": ["{{baseUrl}}"],
                  "path": ["user"]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{special-key}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "special-key",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://petstore.swagger.io/v2"
    },
    {
      "key": "username",
      "value": ""
    },
    {
      "key": "firstName",
      "value": ""
    },
    {
      "key": "lastName",
      "value": ""
    },
    {
      "key": "email",
      "value": ""
    },
    {
      "key": "password",
      "value": ""
    },
    {
      "key": "phone",
      "value": ""
    },
    {
      "key": "petId",
      "value": "1"
    },
    {
      "key": "status",
      "value": "",
      "type": "string"
    },
    {
      "key": "test-itemId",
      "value": ""
    }
  ]
}
